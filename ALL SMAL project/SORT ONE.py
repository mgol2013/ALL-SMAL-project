from numba import jit, cuda 
import numpy as np 
from timeit import default_timer as timer
import threading



def mergeSort(arr): 
    if len(arr) >1: 
        mid = len(arr)//2 # Finding the mid of the array 
        L = arr[:mid] # Dividing the array elements  
        R = arr[mid:] # into 2 halves 
  
        mergeSort(L) # Sorting the first half 
        mergeSort(R) # Sorting the second half 
  
        i = j = k = 0
          
        # Copy data to temp arrays L[] and R[] 
        while i < len(L) and j < len(R): 
            if L[i] < R[j]: 
                arr[k] = L[i] 
                i+= 1
            else: 
                arr[k] = R[j] 
                j+= 1
            k+= 1
          
        # Checking if any element was left 
        while i < len(L): 
            arr[k] = L[i] 
            i+= 1
            k+= 1
          
        while j < len(R): 
            arr[k] = R[j] 
            j+= 1
            k+= 1

def bubbleSort(arr): 
    n = len(arr) 
  
    # Traverse through all array elements 
    for i in range(n): 
  
        # Last i elements are already in place 
        for j in range(0, n-i-1): 
  
            # traverse the array from 0 to n-i-1 
            # Swap if the element found is greater 
            # than the next element 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 
    return arr


def bubble_sort(args):
    l=len(args)
    for i in range(l):
        for p in range(0, l-i-1 ):
            if  args [p] > args [p+1]:
                args [p],args [p+1] = args [p+1],args [p]
    return args

@jit()
def bubble_sort_JIT(args):
    l=len(args)-2
    for i in range(l):
        for p in range(0, l-i-1 ):
            if  args [p] > args [p+1]:
                args [p],args [p+1] = args [p+1],args [p]
    return args




l=np.array([1,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,3])
lt=np.array([1,5,3,-5,10,30,1,31,5,3])
start = timer() 
print (bubble_sort(l))
print("bubble_sort:", timer()-start)

l=np.array([1,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,3])
lt=np.array([1,5,3,-5,10,30,1,31,5,3])
start = timer() 
print (mergeSort(lt))
print("mergeSort:", timer()-start)

l=np.array([1,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,3])
lt=np.array([1,5,3,-5,10,30,1,31,5,3])
start = timer() 
print (bubbleSort(l))
print("bubbleSort:", timer()-start)

l=np.array([1,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,31,5,3,-5,10,30,1,3])
lt=np.array([1,5,3,-5,10,30,1,31,5,3])
start = timer() 
print (bubble_sort_JIT(l))
print("bubble_sort_JIT:", timer()-start)